model:
  base_learning_rate: 8.0e-04  # 5.0e-03: initial base_learning_rate, 8.0e-04: for learning human images (momentum TI)
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    image_size: 64
    channels: 4
    cond_stage_trainable: true   # Note: different from the one we trained before
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    embedding_reg_weight: 0.0
    unfreeze_model: False # base model(S.D.)는 학습시키지 않고, embedding manager만 학습함.
    model_lr: 0.0

    personalization_config:
      target: ldm.modules.embedding_manager.EmbeddingManager
      params:
        placeholder_strings: ["*"]
        initializer_words: ["woman"]  # '*' embedding vector is initialized by 'woman' embedding vector
        per_image_tokens: false
        num_vectors_per_token: 1
        progressive_words: False

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 2
    num_workers: 2
    wrap: false
    train:
      target: ldm.data.personalized.PersonalizedBase
      params:
        # data_root는 arguments로 입력 받음
        # class_string은 argument로 입력 받음
        # descriptive_p은 argument로 입력 받음
        size: 512
        set: train
        per_image_tokens: false
        repeats: 20
    validation:
      target: ldm.data.personalized.PersonalizedBase
      params:
        # data_root는 arguments로 입력 받음 (train set과 동일 값 전달 받음)
        size: 512
        set: val
        per_image_tokens: false
        repeats: 10 # not used

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 100
  callbacks:
    image_logger:
      target: util.callback.ImageLogger
      params:
        batch_frequency: 100
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
    max_steps: 1000